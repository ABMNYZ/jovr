package com.oculusvr.capi;

import java.util.Arrays;
import java.util.List;

import com.oculusvr.capi.OvrLibrary.ovrEyeType;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a
 * href="http://rococoa.dev.java.net/">Rococoa</a>, or <a
 * href="http://jna.dev.java.net/">JNA</a>.
 */
public class EyeDesc extends Structure {
  /** @see ovrEyeType */
  public int Eye;
  /** Absolute size of render texture. */
  public Sizei TextureSize;
  /** Viewport within texture where eye rendering takes place. */
  public Recti RenderViewport;
  /** If specified as (0,0,0,0), it will be initialized to TextureSize. */
  public FovPort Fov;

  public EyeDesc() {
    super();
  }

  @Override
  protected List<?> getFieldOrder() {
    return Arrays.asList("Eye", "TextureSize", "RenderViewport", "Fov");
  }

  public EyeDesc(int Eye, Sizei TextureSize, Recti RenderViewport, FovPort Fov) {
    super();
    this.Eye = Eye;
    this.TextureSize = TextureSize;
    this.RenderViewport = RenderViewport;
    this.Fov = Fov;
  }

  public EyeDesc(Pointer peer) {
    super(peer);
  }

  public static class ByReference extends EyeDesc implements Structure.ByReference {

  };

  public static class ByValue extends EyeDesc implements Structure.ByValue {

  };
}
