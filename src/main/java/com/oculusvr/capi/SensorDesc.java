package com.oculusvr.capi;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a
 * href="http://rococoa.dev.java.net/">Rococoa</a>, or <a
 * href="http://jna.dev.java.net/">JNA</a>.
 */
public class SensorDesc extends Structure {
  /** HID Vendor and ProductId of the device. */
  public short VendorId;
  public short ProductId;
  /** Sensor (and display) serial number. */
  public byte[] SerialNumber = new byte[24];

  public SensorDesc() {
    super();
  }

  @Override
  protected List<?> getFieldOrder() {
    return Arrays.asList("VendorId", "ProductId", "SerialNumber");
  }

  public SensorDesc(short VendorId, short ProductId, byte SerialNumber[]) {
    super();
    this.VendorId = VendorId;
    this.ProductId = ProductId;
    if ((SerialNumber.length != this.SerialNumber.length))
      throw new IllegalArgumentException("Wrong array size !");
    this.SerialNumber = SerialNumber;
  }

  public SensorDesc(Pointer peer) {
    super(peer);
  }

  public static class ByReference extends SensorDesc implements Structure.ByReference {

  };

  public static class ByValue extends SensorDesc implements Structure.ByValue {

  };
}
