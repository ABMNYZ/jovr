package com.oculusvr.capi;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * <i>native declaration : /usr/include/stdint.h</i><br>
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a
 * href="http://rococoa.dev.java.net/">Rococoa</a>, or <a
 * href="http://jna.dev.java.net/">JNA</a>.
 */
public class GlConfigData extends Structure {
  //typedef typedef void (*ContextFunc)(void *, ovrBool);
  //typedef typedef void (*SwapFunc)(void *);
  public interface ContextFunc extends Callback {
    void invoke(Pointer data, int enableDrawContext);
  }

  public interface SwapFunc extends Callback {
    void invoke(Pointer data);
  }
  
  /** C type : ovrRenderAPIConfigHeader */
  public RenderAPIConfigHeader Header;
  
//  void *              ContextData;
//  ContextFunc         ContextSwitch;
//  SwapFunc            SwapBuffers;
  public Pointer     ContextData;
  public ContextFunc ContextSwitch;
  public SwapFunc    SwapBuffers;

  
  public GlConfigData() {
    super();
  }

  @Override
  protected List<?> getFieldOrder() {
    return Arrays.asList("Header", "ContextData", "ContextSwitch", "SwapBuffers");
  }

  public GlConfigData(Pointer peer) {
    super(peer);
  }

  public static class ByReference extends GlConfigData implements Structure.ByReference {

  };

  public static class ByValue extends GlConfigData implements Structure.ByValue {

  };
}
