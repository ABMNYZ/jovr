package com.oculusvr.capi;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a
 * href="http://rococoa.dev.java.net/">Rococoa</a>, or <a
 * href="http://jna.dev.java.net/">JNA</a>.
 */
public class SensorState extends Structure {
  /** readings by comparing ovrPoseState.TimeInSeconds. */
  public PoseStatef Predicted;
  /** moment closest to the requested time. */
  public PoseStatef Recorded;
  /** Sensor temperature reading, in degrees Celsius, as sample time. */
  public float Temperature;
  /** Sensor status described by ovrStatusBits. */
  public int StatusFlags;

  public SensorState() {
    super();
  }

  @Override
  protected List<?> getFieldOrder() {
    return Arrays.asList("Predicted", "Recorded", "Temperature", "StatusFlags");
  }

  public SensorState(PoseStatef Predicted, PoseStatef Recorded, float Temperature, int StatusFlags) {
    super();
    this.Predicted = Predicted;
    this.Recorded = Recorded;
    this.Temperature = Temperature;
    this.StatusFlags = StatusFlags;
  }

  public SensorState(Pointer peer) {
    super(peer);
  }

  public static class ByReference extends SensorState implements Structure.ByReference {

  };

  public static class ByValue extends SensorState implements Structure.ByValue {

  };
}
